{"version":3,"sources":["app.js","bootstrap-dialog-renderer.js","dialog.js","environment.js","main.js","resources/index.js"],"names":["App","dialogService","message","openDialog","open","viewModel","BootstrapDialogRenderer","templatingEngine","dialogs","getDialogContainer","document","createElement","showDialog","dialogController","createDialogHost","then","hideDialog","prototype","options","Object","assign","settings","show","element","createDOMNodes","childrenArray","push","apply","slot","anchor","children","Array","from","forEach","child","querySelector","appendChild","view","enhance","bindingContext","dialog","$","modal","addClass","className","Promise","resolve","reject","on","attached","body","insertBefore","firstChild","off","pop","detached","get","remove","modalHTML","innerHTML","Dialog","debug","testing","configure","config","warnings","wForgottenReturn","aurelia","use","globalResources","standardConfiguration","feature","developmentLogging","plugin","useRenderer","start","setRoot"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject} from 'aurelia-framework';\nimport {DialogService} from 'aurelia-dialog';\nimport {Dialog} from './dialog';\n\n@inject(DialogService)\nexport class App {\n  constructor (dialogService) {\n    this.dialogService = dialogService;\n    this.message = 'Hello World!';\n  }\n\n  openDialog () {\n      this.dialogService.open({\n          viewModel: Dialog\n      });\n  }\n}\n","import 'bootstrap'\nimport {inject, TemplatingEngine} from 'aurelia-framework';\n\n@inject(TemplatingEngine)\nexport class BootstrapDialogRenderer {\n\tconstructor (templatingEngine) {\n        this.templatingEngine = templatingEngine;\n\t\tthis.dialogs = [];\n\t}\n\n\tgetDialogContainer () {\n        return document.createElement('template');\n\t}\n\n\tshowDialog (dialogController) {\n\t\tif (!dialogController.showDialog) {\n\t\t\treturn this.createDialogHost(dialogController)\n\t\t\t\t.then(() => {\n\t\t\t\t\treturn dialogController.showDialog();\n\t\t\t\t});\n\t\t}\n\n\t\treturn dialogController.showDialog();\n\t}\n\n\thideDialog (dialogController) {\n\t\treturn dialogController.hideDialog();\n\t}\n}\n\nBootstrapDialogRenderer.prototype.createDialogHost = function (dialogController) {\n\tvar options = Object.assign(dialogController.settings, {\n\t\tshow: false,\n\t});\n\n    var element = createDOMNodes(document.createElement('div'));\n    var childrenArray = [];\n    [].push.apply(childrenArray, dialogController.slot.anchor.children);\n\n    Array.from(dialogController.slot.anchor.children).forEach((child) => {\n        element.querySelector('bootstrap-dialog')\n            .appendChild(child);\n    });\n\n    var view = this.templatingEngine.enhance({\n        element: element,\n        bindingContext: dialogController.viewModel\n    });\n\n\tvar dialog = $(element).modal(options);\n\n    $('.modal-dialog:first', dialog).addClass(options.className);\n\n\tdialogController.showDialog = () => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t$(element).on('hidden.bs.modal', () => {\n\t\t\t\tdialogController.hideDialog();\n\t\t\t\tresolve();\n\t\t\t});\n\n\t\t\tdialogController.slot.attached();\n\t\t\tdocument.body.insertBefore(element, document.body.firstChild);\n\t\t\tthis.dialogs.push(dialog);\n\t\t\tdialog.modal('show');\n\t\t});\n\t};\n\n\tdialogController.hideDialog = () => {\n\t\t$(element).off('hidden.bs.modal');\n\n\t\tvar dialog = this.dialogs.pop(); // Might need to do a seek and splice here.\n\t\tdialog.modal('hide');\n\t\tdialogController.slot.detached();\n\t\tdialog.get(0).remove();\n\n\t\treturn Promise.resolve();\n\t};\n\n    return Promise.resolve();\n}\n\nfunction createDOMNodes (element) {\n\tvar modalHTML = `<div class=\"modal fade\"><bootstrap-dialog></bootstrap-dialog></div>`;\n\n\telement.innerHTML = modalHTML;\n\treturn element.firstChild;\n}","export class Dialog {}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\nimport {BootstrapDialogRenderer} from './bootstrap-dialog-renderer';\n\n//Configure Bluebird Promises.\nPromise.config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia) {\n  aurelia.use.globalResources(['./bootstrap-dialog.html']);\n\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.use.plugin('aurelia-dialog', (config) => {\n      config.useRenderer(BootstrapDialogRenderer);\n  });\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n"],"sourceRoot":"../src"}